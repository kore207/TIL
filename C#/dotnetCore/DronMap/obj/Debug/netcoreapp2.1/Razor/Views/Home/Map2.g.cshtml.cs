#pragma checksum "C:\Users\K\Documents\TIL\C#\dotnetCore\DronMap\Views\Home\Map2.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3beebcf5c717d20d38c08fbd9f58bf78f5d4b270"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Map2), @"mvc.1.0.view", @"/Views/Home/Map2.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Map2.cshtml", typeof(AspNetCore.Views_Home_Map2))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\K\Documents\TIL\C#\dotnetCore\DronMap\Views\_ViewImports.cshtml"
using DronMap;

#line default
#line hidden
#line 2 "C:\Users\K\Documents\TIL\C#\dotnetCore\DronMap\Views\_ViewImports.cshtml"
using DronMap.Models;

#line default
#line hidden
#line 3 "C:\Users\K\Documents\TIL\C#\dotnetCore\DronMap\Views\_ViewImports.cshtml"
using DronMap.ViewModels;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3beebcf5c717d20d38c08fbd9f58bf78f5d4b270", @"/Views/Home/Map2.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"17c0d9e796847446abb77a811db1a9ab4131c5a2", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Map2 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/BaseFunction.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/DronObject.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("dataForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(121, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 6 "C:\Users\K\Documents\TIL\C#\dotnetCore\DronMap\Views\Home\Map2.cshtml"
  
    ViewBag.Title = "MAP2";
    Layout = null;//asp.net core의 레이아웃에 벗어나기 위해 추가

#line default
#line hidden
            BeginContext(218, 27, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(245, 647, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "54a2c95a591c48f9931ee05b68ef0b8a", async() => {
                BeginContext(251, 290, true);
                WriteLiteral(@"
    <meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"" />
    <title>Dron map 2</title>
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"" />
    <script src=""https://code.jquery.com/jquery-latest.min.js""></script>
");
                EndContext();
                BeginContext(560, 179, true);
                WriteLiteral("    <script type=\"text/javascript\" src=\"https://map.vworld.kr/js/vworldMapInit.js.do?version=2.0&apiKey=B4DB6C25-ADD1-3B61-AED5-934A7F0E07BF&domain=localhost:8080\"></script>\r\n    ");
                EndContext();
                BeginContext(739, 67, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e8a58e008b3b4db582abf5001737fafd", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(806, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(812, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "89c1e8b610ab4d2dace80a58a96522a0", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(877, 8, true);
                WriteLiteral("\r\n    \r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(892, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(896, 17056, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "62b5a6dc024340098bb7cbe0af995669", async() => {
                BeginContext(902, 13521, true);
                WriteLiteral(@"
    <style type=""text/css"">
        .buttons {
            position: relative;
            top: 30px;
        }

        .mapBtn {
            position: relative;
            top: 110px;
            left: 10px;
            z-index: 1000;
        }

        .checkbox-xl {
            position: relative;
            top: 120px;
            left: 90px;
            transform: scale(1.5);
            -webkit-transform: scale(1.5);
        }
    </style>
    <!--네비게이션 영역-->
    <div id=""navi"" style=""height:100%; float:left; width:13% "">
        <div class=""buttons"">
            <!-- 부트스트랩 사용-->
            <button id=""FL"" type=""button"" class=""btn btn-default btn-lg btn-block"">제한구역 보기</button>
            <button id=""position"" type=""button"" class=""btn btn-default btn-lg btn-block"">  내 위치 </button>
            <button id=""addAntenna"" type=""button"" class=""btn btn-default btn-lg btn-block""> 수신기 추가</button>
            <button id=""addDron"" type=""button"" class=""btn btn-default btn-lg btn-blo");
                WriteLiteral(@"ck""> 드론 추가 </button>
            <button id=""dispRoute"" type=""button"" class=""btn btn-default btn-lg btn-block""> 경로 표시 </button>
            <button id=""delDron"" type=""button"" class=""btn btn-default btn-lg btn-block""> 드론 제거 </button>
            <button id=""simul"" type=""button"" class=""btn btn-default btn-lg btn-block""> 실시간 전시</button>
            <button id=""temp"" type=""button"" class=""btn btn-default btn-lg btn-block""> 임시 버튼 </button>
        </div>
        <div class=""custom-control custom-checkbox checkbox-xl"" "">
            <input type=""checkbox"" class=""custom-control-input"" id=""lt_c_aisprhc"">
            <label class=""custom-control-label"" for=""customCheck1"" style=""color:red"">비행금지구역</label><br />
            <input type=""checkbox"" class=""custom-control-input"" id=""lt_c_aisctrc"">
            <label class=""custom-control-label"" for=""customCheck1"" style=""color:orange""> 관제권</label><br />
            <input type=""checkbox"" class=""custom-control-input"" id=""lt_c_aisresc"">
            <label class=""cust");
                WriteLiteral(@"om-control-label"" for=""customCheck1"" style=""color:orangered""> 비행제한구역</label><br />
            <input type=""checkbox"" class=""custom-control-input"" id=""lt_c_aisdngc"">
            <label class=""custom-control-label"" for=""customCheck1"" style=""color:purple""> 위험구역    25kg↑</label><br />
            <input type=""checkbox"" class=""custom-control-input"" id=""lt_c_aismoac"">
            <label class=""custom-control-label"" for=""customCheck1"" style=""color:olive""> 군작전구역    25kg↑</label><br />
            <input type=""checkbox"" class=""custom-control-input"" id=""lt_c_aiscatc"">
            <label class=""custom-control-label"" for=""customCheck1"" style=""color:blue""> 훈련구역    25kg↑</label><br />
            <input type=""checkbox"" class=""custom-control-input"" id=""lt_c_aistmac"">
            <label class=""custom-control-label"" for=""customCheck1"" style=""color:brown""> 접근관제구역 25kg↑</label>
        </div>
    </div>


    <!--지도가 들어갈 영역-->
    <div id=""vmap"" style=""height:100%; float:right; width:87% "">
        <button id=""m");
                WriteLiteral(@"apmode1"" type=""button"" class=""mapBtn btn btn-default active"" style=""position:absolute; margin-top:-100px; margin-left:570px;"">일반지도</button>
        <button id=""mapmode2"" type=""button"" class=""mapBtn btn btn-default"" style=""position:absolute; margin-top:-100px; margin-left:650px;"">야간모드</button>
        <button id=""mapmode3"" type=""button"" class=""mapBtn btn btn-default"" style=""position:absolute; margin-top:-100px; margin-left:730px;"">항공지도</button>
        <button id=""mapmode4"" type=""button"" class=""mapBtn btn btn-default"" style=""position:absolute; margin-top:-100px; margin-left:810px;"">하이브리드</button>
    </div>

    <script type=""text/javascript"">

        //지도 생성
        vw.ol3.CameraPosition.center = [14176994.56431106, 4354866.236842043];
        vw.ol3.CameraPosition.zoom = 19;

        vw.ol3.MapOptions = {
            basemapType: vw.ol3.BasemapType.GRAPHIC
            , controlDensity: vw.ol3.DensityType.FULL
            , interactionDensity: vw.ol3.DensityType.BASIC
            , controlsAu");
                WriteLiteral(@"toArrange: true
            , homePosition: vw.ol3.CameraPosition
            , initPosition: vw.ol3.CameraPosition
        };

        vmap = new vw.ol3.Map(""vmap"", vw.ol3.MapOptions);

        //실제 사용시에는 저작권 문제로인해 로고 삭제하면 안됨
        //$('.vw-notice').remove();
        //$('.vw-logo').remove();
        $('.vw-span').css({ position: ""absolute"" })
        $('.vw-toolbar').css({ position: ""absolute"", display: ""block"", marginLeft: ""25px"", width: ""390px"", height: ""30px"" })



        //마커 추가
        const dronNumLimit = 5;
        let dronNum = 0;//드론 객체 수
        let dronObject = []; //드론 객체가 담길 배열
        let markerLayer; //마커를 담을 레이어

        $(""#addDron"").on(""click"", function (e) {

            if (dronNum == dronNumLimit) {//임의로 5개로 제한
                alert(""허용 드론 수 초과"");
                return;
            }

            dronObject.push(new DronInfo(dronNum, ""Dron"" + dronNum, ""익명"", ""010-xxxx-xxxx"", ""YES"", 0));

            if (markerLayer == null) {//레이어가 없으면 생성함 (init)
      ");
                WriteLiteral(@"          markerLayer = new vw.ol3.layer.Marker(vmap);
                markerLayer.set(""name"", ""마커레이어"");
            }

            var addPoint = [];
            addPoint.push(ol.proj.transform([vmap.getView().getCenter()[0], vmap.getView().getCenter()[1]], ""EPSG:900913"", ""EPSG:4326""));//현재 지도의 중앙 좌표 콜

            vw.ol3.markerOption = {
                x: addPoint[0][0],
                y: addPoint[0][1],
                epsg: ""EPSG:4326"",
                title: '가상 드론',
                contents: dronObject[dronNum].name + '</br>'
                    + '소유주:' + dronObject[dronNum].honer + '</br>'
                    + '핸드폰 번호:' + dronObject[dronNum].phone + '</br>'
                    + '보험:' + dronObject[dronNum].insurance + '</br>',
                iconUrl: '../images/dronImg2.png',
            }; //마커 옵션 설정

            dronObject.popInfo = markerLayer.addMarker(vw.ol3.markerOption);// 마커를 레이어에 등록
            dronObject.popInfo.set(""id"", ""Marker-"" + dronNum); // 마커 팝업레이어 ID 등록

   ");
                WriteLiteral(@"         if (vmap.getLayerByName(""마커레이어"") == null)//하나의 레이어에 추가
            {
                markerLayer.setZIndex(10); // 이동 경로보다 마커가 위에오도록함
                vmap.addLayer(markerLayer) //마커를 vmap에 등록
            }

            dronObject[dronNum].createRoute();
            dronObject[dronNum].startPause();//가상 전시 타이머 + 주행시간 타이머

            dronNum = plusTargetNum(dronNum);
        })

        //드론 삭제
        $(""#delDron"").on(""click"", function (e) {
            e.preventDefault();

            if (dronNum == 0) {
                alert(""드론이 없습니다."");
                return;
            }
            dronNum = minusTargetNum(dronNum);

            var DronFeatures = markerLayer.getSource().getFeatures();

            for (var i = 0; i < dronNum + 1; i++) {
                if (DronFeatures[i].get('id') == (""Marker-"" + dronNum))
                    markerLayer.removeMarker(DronFeatures[i]);
            }



            //vmap.getLayers().getArray().filter(vectorLayer => vectorLayer.");
                WriteLiteral(@"get('name') === '경로레이어' + dronNum).forEach(vectorLayer => vmap.removeLayer(vectorLayer));
            dronObject[dronNum].startPause(); //드론 비행시간 종료

            dronObject.pop(); //드론객체를 스택형식으로 사용하지만 추후에 선택된 드론으로 변경할지 검토
        });

        var layList = [""lt_c_aisprhc"", ""lt_c_aisctrc"", ""lt_c_aisresc"", ""lt_c_aisdngc"", ""lt_c_aismoac"", ""lt_c_aiscatc"", ""lt_c_aistmac""];

        $('#' + layList[0]).change(function () {
            if ($('#' + layList[0]).is("":checked"")) {
                var wmslayer = vmap.addNamedLayer(""비행금지구역"", layList[0]);
                vmap.addLayer(wmslayer);
            } else {
                vmap.getLayerByName(""비행금지구역"");
                vmap.removeLayer(vmap.getLayerByName(""비행금지구역""));
            }
        });

        $('#' + layList[1]).change(function () {
            if ($('#' + layList[1]).is("":checked"")) {
                var wmslayer = vmap.addNamedLayer(""관제권"", layList[1]);
                vmap.addLayer(wmslayer);
            } else {
                v");
                WriteLiteral(@"map.getLayerByName(""관제권"");
                vmap.removeLayer(vmap.getLayerByName(""관제권""));
            }
        });

        $('#' + layList[2]).change(function () {
            if ($('#' + layList[2]).is("":checked"")) {
                var wmslayer = vmap.addNamedLayer(""비행제한구역"", layList[2]);
                vmap.addLayer(wmslayer);
            } else {
                vmap.getLayerByName(""비행제한구역"");
                vmap.removeLayer(vmap.getLayerByName(""비행제한구역""));
            }
        });

        $('#' + layList[3]).change(function () {

            if ($('#' + layList[3]).is("":checked"")) {
                var wmslayer = vmap.addNamedLayer(""위험구역"", layList[3]);
                vmap.addLayer(wmslayer);
            } else {
                vmap.getLayerByName(""위험구역"");
                vmap.removeLayer(vmap.getLayerByName(""위험구역""));
            }
        });

        $('#' + layList[4]).change(function () {
            if ($('#' + layList[4]).is("":checked"")) {
                var wmslayer");
                WriteLiteral(@" = vmap.addNamedLayer(""군작전구역"", layList[4]);
                vmap.addLayer(wmslayer);
            } else {
                vmap.getLayerByName(""군작전구역"");
                vmap.removeLayer(vmap.getLayerByName(""군작전구역""));
            }
        });

        $('#' + layList[5]).change(function () {
            if ($('#' + layList[5]).is("":checked"")) {
                var wmslayer = vmap.addNamedLayer(""훈련구역"", layList[5]);
                vmap.addLayer(wmslayer);
            } else {
                vmap.getLayerByName(""훈련구역"");
                vmap.removeLayer(vmap.getLayerByName(""훈련구역""));
            }
        });

        $('#' + layList[6]).change(function () {
            if ($('#' + layList[6]).is("":checked"")) {
                var wmslayer = vmap.addNamedLayer(""접근관제구역"", layList[6]);
                vmap.addLayer(wmslayer);
            } else {
                vmap.getLayerByName(""접근관제구역""); //?
                vmap.removeLayer(vmap.getLayerByName(""접근관제구역""));
            }
        });

 ");
                WriteLiteral(@"       $(""#position"").on(""click"", function (e) {
            e.preventDefault();
            move(14176994.56431106, 4354866.236842043, 18);
        });

        $(""#dispRoute"").on(""click"", function (e) {
            e.preventDefault();

            if ($(this).css('background-color') == 'rgb(0, 230, 0)') {
                $(this).css('background-color', 'rgb(230, 230, 230)');
                for (var i = 0; i < dronNum; i++)
                    vmap.getLayerByName(""경로레이어"" + i).setVisible(false);
            }
            else {
                $(this).css('background-color', 'rgb(0, 230, 0)');
                for (var i = 0; i < dronNum; i++)
                    vmap.getLayerByName(""경로레이어"" + i).setVisible(true);
            }
        });

        $(""#mapmode1"").on(""click"", function (e) {
            e.preventDefault();
            setMode(vw.ol3.BasemapType.GRAPHIC);
            $(""#mapmode1"").addClass('active')
            $(""#mapmode2"").removeClass('active')
            $(""#mapmode");
                WriteLiteral(@"3"").removeClass('active')
            $(""#mapmode4"").removeClass('active')
        })

        $(""#mapmode2"").on(""click"", function (e) {
            e.preventDefault();
            setMode(vw.ol3.BasemapType.GRAPHIC_NIGHT);
            $(""#mapmode1"").removeClass('active')
            $(""#mapmode2"").addClass('active')
            $(""#mapmode3"").removeClass('active')
            $(""#mapmode4"").removeClass('active')
        })

        $(""#mapmode3"").on(""click"", function (e) {
            e.preventDefault();
            setMode(vw.ol3.BasemapType.PHOTO);
            $(""#mapmode1"").removeClass('active')
            $(""#mapmode2"").removeClass('active')
            $(""#mapmode3"").addClass('active')
            $(""#mapmode4"").removeClass('active')
        })

        $(""#mapmode4"").on(""click"", function (e) {
            e.preventDefault();
            setMode(vw.ol3.BasemapType.PHOTO_HYBRID);
            $(""#mapmode1"").removeClass('active')
            $(""#mapmode2"").removeClass('active')
");
                WriteLiteral(@"            $(""#mapmode3"").removeClass('active')
            $(""#mapmode4"").addClass('active')
        })

        $("".vw-span"").click(function () {
            $(""#mapmode1"").toggle(
                function () { $('#mapmode1').addClass('d.none') },
                function () { $('#mapmode1').addClass('d.print') }
            )
        })

        function setMode(basemapType) {
            vmap.setBasemapType(basemapType);
        }

        //지정 위치로 지도 이동 부드럽게
        function move(x, y, z) {
            var _center = [x, y];

            var z = z;
            var pan = ol.animation.pan({
                duration: 1000,
                source: (vmap.getView().getCenter())
            });
            vmap.beforeRender(pan);
            //vmap.getView().setCenter(ol.proj.transform(_center, 'EPSG:4326', ""EPSG:900913""));
            vmap.getView().setCenter(_center);
            setTimeout(""fnMoveZoom()"", 2000);
        }
        function fnMoveZoom() {
            zoom = vmap.g");
                WriteLiteral("etView().getZoom();\r\n            if (16 > zoom) {\r\n                vmap.getView().setZoom(18);\r\n            }\r\n        };\r\n    </script>\r\n\r\n    <input type=\"button\" value=\"fetch\" onclick=\"ajaxTest();\">\r\n\r\n    ");
                EndContext();
                BeginContext(14423, 626, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "772bc46859fc4d97a465905e87b6e713", async() => {
                    BeginContext(14443, 599, true);
                    WriteLiteral(@"
        <input type=""hidden"" name=""domain"" value=""http://127.0.0.1"">
        <input type=""hidden"" name=""service"" value=""WFS"">
        <input type=""hidden"" name=""version"" value=""1.1.0"">
        <input type=""hidden"" name=""request"" value=""GetFeature"">
        <input type=""hidden"" name=""key"" value=""B3A5C06A-E388-3A4D-B45F-CC45EF4F315E"">
        <input type=""hidden"" name=""output"" value=""text/javascript"">
        <input type=""hidden"" name=""typename"" value=""lt_c_aisprhc"">
        <input type=""hidden"" name=""bbox"" value="""">
        <input type=""hidden"" name=""srsname"" value=""EPSG:4326"">
    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15049, 2896, true);
                WriteLiteral(@"


    
    <p><span>역지오코더 위치 : </span><span id=""geoAddress""></span> </p>
    <p><span>좌표(4326) : </span><span id=""geo4326""></span> </p>
    <p><span>좌표(3857) : </span><span id=""geo3857""></span> </p>

    <script>
        var returnResult = """";
        //비행 금지구역 체크
        function ajaxTest(dx, dy) {
            var addPoint = [];
            //addPoint.push(ol.proj.transform([vmap.getView().getCenter()[0], vmap.getView().getCenter()[1]], ""EPSG:900913"", ""EPSG:4326""));//현재 지도의 중앙 좌표 콜
            addPoint.push(ol.proj.transform([dx, dy], ""EPSG:900913"", ""EPSG:4326""));
            //var box = dx + "","" + dy + "","" + dx + "","" + dy;
            var box = addPoint[0][0] + "","" + addPoint[0][1] + "","" + addPoint[0][0] + "","" + addPoint[0][1];


            $('#dataForm > [name=bbox]').val(box);
            $.ajax({
                type: ""get"",
                url: ""https://api.vworld.kr/req/wfs"",
                data: $('#dataForm').serialize(),
                dataType: 'jsonp',
                ");
                WriteLiteral(@"async: false,
                jsonpCallback: ""parseResponse"",
                success: function (data) {
                    //console.log(data);
                    //console.log(data.features[0].properties);
                    returnResult = ""정상"";
                    if (data.features[0]) {
                        returnResult = ""비행제한구역"";
                    }
                },
                error: function (xhr, stat, err) {
                    //console.log(""error"");
                }
            });
        }

        var geocoder_reverse = function (x, y) {
            $.ajax({
                type: ""get"",
                url: ""https://api.vworld.kr/req/address?service=address&version=2.0&request=getaddress&format=json&type=both&crs=epsg:900913"",
                data: { apiKey: $('[name=key]').val(), point: x + "","" + y },
                dataType: 'jsonp',
                success: function (data) {
                    var geoResult = """";
                    for (i in data.res");
                WriteLiteral(@"ponse.result) {
                        if (i != 0) {
                            geoResult += "", "";
                        }
                        geoResult += data.response.result[i].text;
                    }
                    $('#geoAddress').text(geoResult);
                },
                beforeSend: function () {
                    var g4326 = ol.proj.transform([x * 1, y * 1], 'EPSG:900913', ""EPSG:4326"");
                    $('#geo4326').text(g4326[0] + "","" + g4326[1]);
                    $('#geo3857').text(x + "","" + y);

                },

                error: function (xhr, stat, err) { }
            });
        }

        vmap.on(""moveend"", function (evt) {
            var center = vmap.getView().getCenter();

            geocoder_reverse(center[0], center[1]);
        });
    </script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(17952, 9, true);
            WriteLiteral("\r\n</html>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
