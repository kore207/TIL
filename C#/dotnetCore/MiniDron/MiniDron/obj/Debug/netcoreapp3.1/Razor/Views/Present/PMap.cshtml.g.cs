#pragma checksum "C:\Users\CEO\Desktop\소형드론\source\MiniDron\MiniDron\Views\Present\PMap.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "45fe55ddcbc3d3b54071f315cb888f722f4d0bfe"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Present_PMap), @"mvc.1.0.view", @"/Views/Present/PMap.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\CEO\Desktop\소형드론\source\MiniDron\MiniDron\Views\_ViewImports.cshtml"
using MiniDron;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\CEO\Desktop\소형드론\source\MiniDron\MiniDron\Views\_ViewImports.cshtml"
using MiniDron.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\CEO\Desktop\소형드론\source\MiniDron\MiniDron\Views\Present\PMap.cshtml"
using MiniDron.Controllers;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"45fe55ddcbc3d3b54071f315cb888f722f4d0bfe", @"/Views/Present/PMap.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e585bc668d4a6ab898a30f4c2aae8a14413abf6e", @"/Views/_ViewImports.cshtml")]
    public class Views_Present_PMap : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/DronObject.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("searchForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("#"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form_data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onsubmit", new global::Microsoft.AspNetCore.Html.HtmlString("return false;search();"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("dataForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n<style>\r\n\r\n</style>\r\n<!DOCTYPE html>     \r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45fe55ddcbc3d3b54071f315cb888f722f4d0bfe6557", async() => {
                WriteLiteral("\r\n    <title>소형드론</title>\r\n");
                WriteLiteral("    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45fe55ddcbc3d3b54071f315cb888f722f4d0bfe6881", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <link rel=""stylesheet"" type=""text/css"" href=""../css/site.css""/>

    <style>
        table, th, td {
            border: 1px solid white;
            border-collapse: collapse;
        }

        th, td {
            padding: 2px;
            text-align: left;
        }
    </style>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45fe55ddcbc3d3b54071f315cb888f722f4d0bfe9079", async() => {
                WriteLiteral("\r\n\r\n    <div id=\"mySidebar\" class=\"sidebar\" style=\"height:100%; float:left; width:13%\">\r\n");
                WriteLiteral(@"        <div class=""accordion"" id=""Sidebar"">
            <div class=""card"">
                <div class=""card-header"" id=""headingOne"">
                    <h2 class=""mb-0"">
                        <button class=""btn btn-link"" type=""button"" data-toggle=""collapse"" data-target=""#collapseOne"" aria-expanded=""true"" aria-controls=""collapseOne"">
                            드론 보기 설정
                        </button>
                    </h2>
                </div>

                <div id=""collapseOne"" class=""collapse show"" aria-labelledby=""headingOne"" data-parent=""#Sidebar"">
                    <div class=""card-body"">
                        <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px; "">드론 전체 감추기</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                        <label clas");
                WriteLiteral(@"s=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px; "">미허가</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px; "">미식별</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px; "">식별ID유효성 이상</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px; "">비행금지 위반</label><br />
                    </div>
                </div>
            </div>
            <div class=""card"">
                <div class=""card-header"" id=""headingTwo"">
                   ");
                WriteLiteral(@" <h2 class=""mb-0"">
                        <button class=""btn btn-link collapsed"" type=""button"" data-toggle=""collapse"" data-target=""#collapseTwo"" aria-expanded=""false"" aria-controls=""collapseTwo"">
                            식별기 보기 설정
                        </button>
                    </h2>
                </div>
                <div id=""collapseTwo"" class=""collapse"" aria-labelledby=""headingTwo"" data-parent=""#Sidebar"">
                    <div class=""card-body"">
                        <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px; "">식별기 전체 감추기</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px; "">상태 이상</label><br />
                    </div>
                </div");
                WriteLiteral(@">
            </div>
            <div class=""card"">
                <div class=""card-header"" id=""headingThree"">
                    <h2 class=""mb-0"">
                        <button class=""btn btn-link collapsed"" type=""button"" data-toggle=""collapse"" data-target=""#collapseThree"" aria-expanded=""false"" aria-controls=""collapseThree"">
                            비행금지구역 보기 설정
                        </button>
                    </h2>
                </div>
                <div id=""collapseThree"" class=""collapse"" aria-labelledby=""headingThree"" data-parent=""#Sidebar"">
                    <div class=""card-body"">
                        <input type=""checkbox"" class=""form-check-input"" id=""lt_c_aisprhc"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:red; margin-left:30px;"">비행금지구역</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""lt_c_aisctrc"" style=""margin-left:10px;"">
                        <label");
                WriteLiteral(@" class=""form-check-label"" for=""lt_c_aisctrc"" style=""color:orange; margin-left:30px;""> 관제권</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""lt_c_aisresc"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aisresc"" style=""color:orangered; margin-left:30px;""> 비행제한구역</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""lt_c_aisdngc"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aisdngc"" style=""color:purple; margin-left:30px;""> 위험구역    25kg↑</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""lt_c_aismoac"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aismoac"" style=""color:olive; margin-left:30px;""> 군작전구역    25kg↑</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""lt_c_aiscatc"" style=""margin-left:10px;"">
                ");
                WriteLiteral(@"        <label class=""form-check-label"" for=""lt_c_aiscatc"" style=""color:blue; margin-left:30px;""> 훈련구역    25kg↑</label><br />
                        <input type=""checkbox"" class=""form-check-input"" id=""lt_c_aistmac"" style=""margin-left:10px;"">
                        <label class=""form-check-label"" for=""lt_c_aistmac"" style=""color:brown; margin-left:30px;""> 접근관제구역 25kg↑</label>
                    </div>
                </div>
                <div class=""card"">
                    <div class=""card-header"" id=""headingFour"">
                        <h2 class=""mb-0"">
                            <button class=""btn btn-link collapsed"" type=""button"" data-toggle=""collapse"" data-target=""#collapseFour"" aria-expanded=""false"" aria-controls=""collapseFour"">
                                보기 설정
                            </button>
                        </h2>
                    </div>
                    <div id=""collapseFour"" class=""collapse"" aria-labelledby=""headingFour"" data-parent=""#Sidebar"">
          ");
                WriteLiteral(@"              <div class=""card-body"">
                            <input type=""checkbox"" class=""form-check-input"" id=""adsigg"" style=""margin-left:10px;"">
                            <label class=""form-check-label"" for=""adsigg"" style=""color:black; margin-left:30px;"">시군구 경계</label><br />
                            <input type=""checkbox"" class=""form-check-input"" id=""ademd"" style=""margin-left:10px;"">
                            <label class=""form-check-label"" for=""ademd"" style=""color:black; margin-left:30px;"">읍면동 경계</label><br />
                            <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                            <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px;"">드론 방향</label><br />
                            <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                            <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px; "">드");
                WriteLiteral(@"론 경로</label><br />
                            <input type=""checkbox"" class=""form-check-input"" id=""temp"" style=""margin-left:10px;"">
                            <label class=""form-check-label"" for=""lt_c_aisprhc"" style=""color:black; margin-left:30px; "">선택드론 조종기 보기</label><br />
                        </div>
                    </div>
                </div>
            </div>
        </div>
");
                WriteLiteral(@"        <div class=""buttons"">
            <button id=""position"" type=""button"" class=""btn btn-light btn-lg btn-block"">  내 위치 </button>
            <button id=""addAntenna"" type=""button"" class=""btn btn-light btn-lg btn-block""> 식별기 추가</button>
            <button id=""addDron"" type=""button"" class=""btn btn-light btn-lg btn-block""> 드론 추가 </button>
            <button id=""delDron"" type=""button"" class=""btn btn-light btn-lg btn-block""> 드론 제거 </button>
            <button id=""dispRoute"" type=""button"" class=""btn btn-light btn-lg btn-block""> 경로 선 표시 </button>
            <button id=""dispDotRoute"" type=""button"" class=""btn btn-light btn-lg btn-block""> 경로 점 표시</button>
            <button id=""tempbtn2"" type=""button"" class=""btn btn-light btn-block btn-lg"">임시 버튼</button>
            <button id=""tempbtn"" type=""button"" class=""btn btn-light btn-lg btn-block""> 임시 버튼 </button>

        </div>
    </div>

    <!--지도가 들어갈 영역-->
    <div id=""vmap"" style=""position:relative; height:830px; float:right; width:87%; transition");
                WriteLiteral(": 0.5s; \">\r\n");
                WriteLiteral("\r\n        <div style=\"height:38px;\">\r\n\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45fe55ddcbc3d3b54071f315cb888f722f4d0bfe18938", async() => {
                    WriteLiteral(@"
                <button class=""btn-primary"" onclick=""toggleNav()"" style=""width:37px; height:37px;"">☰</button>
                <input type=""hidden"" id=""sido_key"" value=""12685d425f1af0872d756c"" />
                <input type=""hidden"" id=""sigoon_key"" value=""b0888bae39fbd0463a9252"" />
                <input type=""hidden"" id=""dong_key"" value=""91afccaa8d7f499151ee3b"" />
                <input type=""hidden"" name=""apiKey"" value=""D36C2F4C-D5D4-3214-8304-E094FCA2F56D"" />
                <select id=""sido_code"" style=""height:37px;"">
                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45fe55ddcbc3d3b54071f315cb888f722f4d0bfe19791", async() => {
                        WriteLiteral("선택");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                </select>\r\n                <select id=\"sigoon_code\" style=\"height:37px;\">\r\n                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45fe55ddcbc3d3b54071f315cb888f722f4d0bfe20977", async() => {
                        WriteLiteral("선택");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                </select>\r\n                <select id=\"dong_code\" style=\"height:37px;\">\r\n                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45fe55ddcbc3d3b54071f315cb888f722f4d0bfe22161", async() => {
                        WriteLiteral("선택");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                </select>\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>
        <button id=""mapmode1"" type=""button"" class=""mapBtn btn btn-light active"" style=""position:absolute; margin-top:-60px; margin-left:370px; "">일반지도</button>
        <button id=""mapmode2"" type=""button"" class=""mapBtn btn btn-light"" style=""position:absolute; margin-top:-60px; margin-left:460px;"">야간모드</button>
        <button id=""mapmode3"" type=""button"" class=""mapBtn btn btn-light"" style=""position:absolute; margin-top:-60px; margin-left:550px;"">항공지도</button>
        <button id=""mapmode4"" type=""button"" class=""mapBtn btn btn-light"" style=""position:absolute; margin-top:-60px; margin-left:640px;"">하이브리드</button>
    </div>

");
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45fe55ddcbc3d3b54071f315cb888f722f4d0bfe25367", async() => {
                    WriteLiteral(@"
        <input type=""hidden"" name=""key"" value=""D36C2F4C-D5D4-3214-8304-E094FCA2F56D"">
        <input type=""hidden"" name=""domain"" value=""http://localhost:8080"">
        <input type=""hidden"" name=""service"" value=""data"">
        <input type=""hidden"" name=""version"" value=""2.0"">
        <input type=""hidden"" name=""request"" value=""getfeature"">
        <input type=""hidden"" name=""format"" value=""json"">
        <input type=""hidden"" name=""size"" value=""10"">
        <input type=""hidden"" name=""page"" value=""1"">
        <!-- <input type=""hidden"" name=""data"" value=""LT_C_ADSIDO_INFO""> -->
        <input type=""hidden"" name=""data"" value=""LT_C_ADEMD_INFO"">
        <input type=""hidden"" name=""geometry"" value=""true"">
        <input type=""hidden"" name=""attribute"" value=""true"">
        <input type=""hidden"" name=""crs"" value=""EPSG:900913"">
    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    <script type=""text/javascript"">
        //var container = document.getElementById('popup');
        //var content = document.getElementById('popup-content');
        //var closer = document.getElementById('popup-closer');

        //var popupOverlay = new ol.Overlay({
        //    element: container,
        //    autoPan: true,
        //    autoPanAnimation: {
        //        duration: 250
        //    }
        //});

        //closer.onclick = function () {
        //    $('#popup-open').attr('id', 'popup')
        //    popupOverlay.setPosition(undefined);
        //    popupOverlay.set('id', 'popup-none');
        //    closer.blur();
        //    return false;
        //};
        //지도 생성
        vw.ol3.CameraPosition.center = [14176994.56431106, 4354866.236842043];
        vw.ol3.CameraPosition.zoom = 19;

        vw.ol3.MapOptions = {
            basemapType: vw.ol3.BasemapType.GRAPHIC
            , controlDensity: vw.ol3.DensityType.FULL
            , interact");
                WriteLiteral(@"ionDensity: vw.ol3.DensityType.BASIC
            , controlsAutoArrange: true
            , homePosition: vw.ol3.CameraPosition
            , initPosition: vw.ol3.CameraPosition
        };

        vmap = new vw.ol3.Map(""vmap"", vw.ol3.MapOptions);
        //vmap.addOverlay(popupOverlay);

        //var element = document.getElementById('popupOverlay');

        vmap.on('singleclick', function (evt) {
            //$('#popup-open').attr('id', 'popup')
            //popupOverlay.set('id', 'popup-none');
            //popupOverlay.setPosition(undefined);
            //closer.blur();
            var feature = vmap.forEachFeatureAtPixel(evt.pixel,
                function (feature) {
                    return feature;
                });

            //if (feature.get('id').indexOf('antenna') > -1) { //식별기 클릭
            //    var thisAntennaNum = feature.get('id')[8]
            //    $('#popup').attr('id','popup-open')
            //    var coordinates = feature.getGeometry().getCoordinat");
                WriteLiteral(@"es();
            //    popupOverlay.set('id', 'popup-antenna' + thisAntennaNum);
            //    popupOverlay.setPosition(coordinates);
            //    content.innerHTML = feature.get('contents');
            //} else if (feature.get('id').indexOf('Dron') > -1) {
            //    var thisDronNum = feature.get('id')[5]
            //    $('#popup').attr('id', 'popup-open')
            //    var coordinates = feature.getGeometry().getCoordinates();
            //    popupOverlay.set('id', 'popup-dron' + thisDronNum);
            //    popupOverlay.setPosition(coordinates);
            //    content.innerHTML = feature.get('contents');
            //} else {
            //    //$(container).popover('destroy');
            //    //$('#popup-open').attr('id', 'popup')
            //    //popupOverlay.set('id', 'popup-none');
            //    //popupOverlay.setPosition(undefined);
            //    //closer.blur();
            //}

            var overlayElement = document.createElement(""d");
                WriteLiteral(@"iv"");
            overlayElement.setAttribute(""class"", ""ol-popup"");
            //overlayElement.setAttribute(""style"", ""background-color: #3399CC; border: 2px solid white; color:white"");
            //overlayElement.setAttribute(""onclick"", ""deleteOverlay('"" + feature.get(""id"") + ""')"");
            overlayElement.innerHTML = ""<p>"" + feature.get('id') + ""</p>"";

            var overlayInfo = new ol.Overlay({
                id: feature.get(""id""),
                element: overlayElement,
                offset: [0, -70],
                position: ol.proj.transform(feature.getGeometry().getCoordinates(), 'EPSG:4326', ""EPSG:900913"")
            });

            if (feature.get(""id"") != null) {
                vmap.removeOverlay(vmap.getOverlayById(feature.get(""id"")));
            }

            vmap.addOverlay(overlayInfo);
        });

        //맵 내부 스타일 수정
        $('.vw-span').css({ position: ""absolute"" })
        $('.vw-toolbar').css({ position: ""absolute"", display: ""block"", marginLeft: """);
                WriteLiteral(@"25px"", width: ""390px"", height: ""30px"" })

        document.getElementById(""mySidebar"").addEventListener(""transitionend"", function () { vmap.updateSize() });

        //식별기 추가
        $(""#addAntenna"").on(""click"", function (e) {

            //var addPoint = [];
            //addPoint.push(ol.proj.transform([vmap.getView().getCenter()[0], vmap.getView().getCenter()[1]], ""EPSG:900913"", ""EPSG:4326""));//현재 지도의 중앙 좌표 콜

            //if (antennaLayer == null) {
            //    antennaLayer = new vw.ol3.layer.Marker(vmap);
            //    antennaLayer.set(""name"", ""식별기레이어"");
            //}
            //vw.ol3.markerOption = {
            //    x: addPoint[0][0],
            //    y: addPoint[0][1],
            //    epsg: ""EPSG:4326"",
            //    title: '식별기' + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID',
            //    contents:
            //        '<table style=""width:100%"">'
            //        + '<tr><th>운용타입</th><td> 고정형 </td></tr>'
            //        + '<tr><th>동작상");
                WriteLiteral(@"태</th><td> 정상 </td></tr>'
            //        + '<tr><th>식별드론수</th><td> - 대 </td></tr></table>'
            //        + '<hr>'
            //        + '<button type=""button"" class=""btn btn-primary"" id=""dronInfoPop"" onclick=""tempfunc()"";>식별기정보</button>' + '&nbsp&nbsp'
            //        + '<button type=""button"" class=""btn btn-primary"" id=""dronMasPop"" >상태로그</button>'
            //    ,

            //    iconUrl: '../images/antennaImg.png',
            //    text: {
            //        offsetX: 0.5, //위치설정
            //        offsetY: 10,   //위치설정
            //        font: '12px Calibri,sans-serif',
            //        fill: { color: '#000' },
            //        stroke: { color: '#fff', width: 2 },
            //        text: '가상식별기' //식별기 id
            //    },
            //}; //마커 옵션 설정

            //antennaLayer.addMarker(vw.ol3.markerOption).set(""id"", ""antenna-"" + dronNum);

            //if (vmap.getLayerByName(""식별기레이어"") == null) {
            //    antennaLayer.set");
                WriteLiteral(@"ZIndex(10); // 이동 경로보다 마커가 위에오도록함
            //    vmap.addLayer(antennaLayer); //마커를 vmap에 등록
            //}
            //antennaFeatures[dronNum]
            var fe = new ol.Feature({
                geometry: vmap.getView().getCenter(),
                title: '테스트 식별기',

            })
            fe.set(""id"", ""antenna"" + dronNum);

            var iconStyle = new ol.style.Style({
                image: new ol.style.Icon(({
                    anchor: [0.5, 46],
                    anchorXUnits: 'fraction',
                    anchorYUnits: 'pixels',
                    src: '../images/antennaImg.png'
                }))
            });
            fe.setStyle(iconStyle);

            var vectorSource = new ol.source.Vector({
                features: fe
            });

            antennaLayer = new ol.layer.Vector({
                source: vectorSource
            });

            antennaLayer.set(""name"", ""식별기레이어"");

            vmap.addLayer(antennaLayer);
        })");
                WriteLiteral(@"

        //마커(드론) 추가
        $(""#addDron"").on(""click"", function (e) {

            if (dronNum == dronNumLimit) {//임의로 5개로 제한
                alert(""허용 드론 수 초과"");
                return;
            }

            var time = new Date().toLocaleTimeString('ko-KR', { timeStyle: 'medium', hourCycle: 'h24' });
            dronObject.push(new DronInfo(dronNum, ""Dron"" + dronNum, ""익명"", ""010-xxxx-xxxx"", ""YES"", 0, time));

            if (markerLayer == null) {//레이어가 없으면 생성함 (init)
                markerLayer = new vw.ol3.layer.Marker(vmap);
                markerLayer.set(""name"", ""마커레이어"");//현재 마커=드론
            }

            var addPoint = [];
            addPoint.push(ol.proj.transform([vmap.getView().getCenter()[0], vmap.getView().getCenter()[1]], ""EPSG:900913"", ""EPSG:4326""));//현재 지도의 중앙 좌표 콜

            vw.ol3.markerOption = {
                x: addPoint[0][0],
                y: addPoint[0][1],
                epsg: ""EPSG:4326"",
                title: dronObject[dronNum].name + '&nbsp;&");
                WriteLiteral(@"nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID' + '<a href=""#"" onclick=""tempfunc2()"">*</a>',
                contents:
                    '<table style=""width:100%"">'
                    + '<tr><th>동작상태</th><td> 정상 </td></tr>'
                    + '<tr><th>식별시작시간</th><td> <span Id=""dStartIdTime""></span>' + time + '</td></tr>'
                    + '<tr><th>식별지속시간</th><td> <span Id=""dIdTime""></span> </td></tr>'
                    + '<tr><th>속도</th><td> <span Id=""dSpeed""></span> </td></tr>'
                    + '<tr><th>방향</th><td> <span Id=""dDirection""></span> </td></tr>'
                    + '<tr><th>해발고도</th><td> <span Id=""dAltitude""></span> </td></tr>'
                    + '<tr><th>조종기 거리</th><td> <span Id=""dronToConLength""></span> </td></tr>'
                    + '<tr><th>식별기 목록</th><td> <span Id=""dIdentyDevice""></span> </td></tr>'
                    + '<tr><th colspan=""2"" >위도 / 경도</th></tr>'
                    + '<tr><td colspan=""2""><span Id=""dLatLon""></span> </td></tr>'
                    +");
                WriteLiteral(@" '<tr><th colspan=""2"" style =""text- align: center"">주소</th></tr>'
                    + '<tr><td colspan=""2""><span Id=""dAddress""></span> </td></tr></table>'
                    + '<hr>'
                    + '<button type=""button"" class=""btn btn-primary"" id=""dronInfoPop"" onclick=""tempfunc()"";>드론정보</button>' + '&nbsp&nbsp'
                    + '<button type=""button"" class=""btn btn-primary"" id=""dronMasPop"" >소유자</button>' + '</br>'
                    + '<button type=""button"" class=""btn btn-primary"" id=""dronAccPop"">허가정보</button>' + '&nbsp&nbsp'
                    + '<button type=""button"" class=""btn btn-primary"" id=""dronStatusPop"">상태로그</button>'
                ,

                iconUrl: '../images/dronImg2.png',
                text: {
                    offsetX: 0.5, //위치설정
                    offsetY: 10,   //위치설정
                    font: '12px Calibri,sans-serif',
                    fill: { color: '#000' },
                    stroke: { color: '#fff', width: 2 },
                    text:");
                WriteLiteral(@" '테스트 드론' + dronNum //드론 아이디 위치
                },
            }; //마커 옵션 설정

            //dronObject.popInfo = markerLayer.addMarker(vw.ol3.markerOption);// 마커를 레이어에 등록
            //dronObject.popInfo.set(""id"", ""DronMarker-"" + dronNum); // 마커 팝업레이어 ID 등록
            //console.log(vmap.getOverlays().getArray()[0].get('id'))
            markerLayer.addMarker(vw.ol3.markerOption).set(""id"", ""Dron"" + dronNum);

            if (vmap.getLayerByName(""마커레이어"") == null)//하나의 레이어에 추가
            {
                markerLayer.setZIndex(10); // 이동 경로보다 마커가 위에오도록함
                vmap.addLayer(markerLayer) //마커를 vmap에 등록
            }

            dronObject[dronNum].createRoute();
            dronObject[dronNum].startPause();//가상 전시 타이머 + 주행시간 타이머

            //드론 추가시 조종기 추가

            var controller = new ol.Feature({
                geometry: new ol.geom.Point(vmap.getView().getCenter())
            });

            controller.set(""id"", ""controller-"" + dronNum);
            var iconStyle = ");
                WriteLiteral(@"new ol.style.Style({
                image: new ol.style.Icon(({
                    anchor: [0.5, 46],
                    anchorXUnits: 'fraction',
                    anchorYUnits: 'pixels',
                    src: '../images/dController.png'
                }))
            });

            controller.setStyle(iconStyle);

            if (vmap.getLayerByName(""조종기레이어"") == null)//하나의 레이어에 추가 (레이어는 한번만 생성한다,제거도 안함)
            {
                var ctr_vectorSource = new ol.source.Vector({
                    features: [controller]
                });

                controllerLayer = new ol.layer.Vector({
                    source: ctr_vectorSource
                });

                controllerLayer.set(""name"", ""조종기레이어"");
                //vectorLayer.setVisible(false); //드론을 클릭했을때 조종기가 보이게 한다.
                vmap.addLayer(controllerLayer);
            } else {
                controllerLayer.getSource().addFeature(controller);
            }


            //최종으로 드론수 증가
    ");
                WriteLiteral(@"        dronNum = plusTargetNum(dronNum);

        })


        //드론 삭제
        $(""#delDron"").on(""click"", function (e) {
            e.preventDefault();

            if (dronNum == 0) {
                alert(""드론이 없습니다."");
                return;
            }
            dronNum = minusTargetNum(dronNum);

            var DronFeatures = markerLayer.getSource().getFeatures();
            var ControllerFeatrues = controllerLayer.getSource().getFeatures();
            //console.log(DronFeatures[0].getGeometry());
            for (var i = 0; i < dronNum + 1; i++) {
                if (DronFeatures[i].get('id') == (""Dron"" + dronNum))
                    markerLayer.removeMarker(DronFeatures[i]);

                if (ControllerFeatrues[i].get('id') == (""controller-"" + dronNum))//조종기도 있는경우 제거한다.
                    controllerLayer.getSource().removeFeature(ControllerFeatrues[i])
            }
            if (controllerLayer.getSource().getFeatureById('temptemp'))//조종기 선 제거있는 경우 제거
         ");
                WriteLiteral(@"       controllerLayer.getSource().removeFeature(controllerLayer.getSource().getFeatureById('temptemp'))


            //vmap.getLayers().getArray().filter(vectorLayer => vectorLayer.get('name') === '경로레이어' + dronNum).forEach(vectorLayer => vmap.removeLayer(vectorLayer));
            dronObject[dronNum].startPause(); //드론 비행시간 종료

            dronObject.pop(); //드론객체를 스택형식으로 사용하지만 추후에 선택된 드론으로 변경할지 검토
        });


    </script>

    <div id=""modal-placeholder""></div>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html >\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
